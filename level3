import sqlite3

def connect_db():
    return sqlite3.connect("book_db.sqlite")

def create_table():
    conn = connect_db()
    cur = conn.cursor()
    cur.execute('''CREATE TABLE IF NOT EXISTS books (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    name TEXT NOT NULL,
                    page_count INTEGER NOT NULL);''')
    conn.commit()
    conn.close()

def show_all_records():
    conn = connect_db()
    cur = conn.cursor()
    cur.execute('SELECT * FROM books')
    rows = cur.fetchall()

    column_names = [description[0] for description in cur.description]
    print("{:<5} {:<30} {:<10}".format(column_names[0], column_names[1], column_names[2]))
    print("-" * 45)

    for row in rows:
        print("{:<5} {:<30} {:<10}".format(row[0], row[1], row[2]))

    conn.close()

def search_records():
    field = input("Enter the field to search by (id, name, page_count): ")
    value = input("Enter the value to search for: ")

    conn = connect_db()
    cur = conn.cursor()
    query = f"SELECT * FROM books WHERE {field} LIKE ?"
    cur.execute(query, (f"%{value}%",))
    rows = cur.fetchall()

    if rows:
        column_names = [description[0] for description in cur.description]
        print("{:<5} {:<30} {:<10}".format(column_names[0], column_names[1], column_names[2]))
        print("-" * 45)

        for row in rows:
            print("{:<5} {:<30} {:<10}".format(row[0], row[1], row[2]))
    else:
        print("No records found.")

    conn.close()

def update_record():
    record_id = input("Enter the ID of the record to update: ")

    new_name = input("Enter the new name: ")
    new_page_count = input("Enter the new page count: ")

    conn = connect_db()
    cur = conn.cursor()
    cur.execute('''UPDATE books SET name = ?, page_count = ? WHERE id = ?''', (new_name, new_page_count, record_id))
    conn.commit()
    conn.close()
    print(f"Record with ID {record_id} has been updated.")

def main():
    create_table()

    while True:
        print("\nMenu:")
        print("1. Show all records")
        print("2. Search records")
        print("3. Update a record")
        print("4. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            show_all_records()
        elif choice == '2':
            search_records()
        elif choice == '3':
            update_record()
        elif choice == '4':
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
